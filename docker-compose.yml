version: '3.8'

services:
  # MongoDB Database Service
  mongodb:
    image: mongo:7.0.5
    container_name: ai-stock-bot-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      # Persist MongoDB data
      - mongodb_data:/data/db
      # Custom initialization scripts
      - ./backend/docker/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - ai-stock-bot-network
    restart: unless-stopped
    command: mongod --bind_ip_all

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: ai-stock-bot-backend
    ports:
      - "${PORT}:${PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - PORT=${PORT}
    volumes:
      # Mount source code for development hot reload
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/package-lock.json:/app/package-lock.json
    depends_on:
      - mongodb
    networks:
      - ai-stock-bot-network
    restart: unless-stopped
    profiles:
      - backend

  # Telegram Bot Service
  tg-bot:
    build:
      context: ./tg-bot
      dockerfile: Dockerfile
    container_name: ai-stock-bot-telegram
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - BACKEND_API_URL=http://backend:${PORT}/api
      - BACKEND_API_TIMEOUT=${BACKEND_API_TIMEOUT}
      - DEMO_MODE=${DEMO_MODE}
    depends_on:
      - backend
    networks:
      - ai-stock-bot-network
    restart: unless-stopped
    profiles:
      - bot

  # MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: ai-stock-bot-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      - mongodb
    networks:
      - ai-stock-bot-network
    restart: unless-stopped
    profiles:
      - tools

# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local
    name: ai-stock-bot-mongodb-data

# Custom network for service communication
networks:
  ai-stock-bot-network:
    driver: bridge
    name: ai-stock-bot-network
